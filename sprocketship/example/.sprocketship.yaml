snowflake:
  account: {{ env.get('SNOWFLAKE_ACCOUNT') }}
  user: {{ env.get('SNOWFLAKE_USER') }}
  password: {{ env.get('SNOWFLAKE_PASSWORD') }}
  role: {{ env.get('SNOWFLAKE_ROLE') }}
  warehouse: {{ env.get('SNOWFLAKE_WAREHOUSE') }}

procedures:
  development:
    - name: create_temp_database
      replace_if_exists: true
      database: {{ env.get('SNOWFLAKE_DATABASE') }}
      schema: {{ env.get('SNOWFLAKE_SCHEMA') }}
      language: javascript
      execute_as: caller
      args:
        database_name: varchar
        ttl: varchar
      returns: varchar
      comment: |
        Allows the caller to make a temporary development
        database that cleans up after a designated amount of time.

  admin:
    - name: create_database_reader
      replace_if_exists: true
      database: {{ env.get('SNOWFLAKE_DATABASE') }}
      schema: {{ env.get('SNOWFLAKE_SCHEMA') }}
      language: javascript
      execute_as: owner
      args:
        database_name: varchar
      returns: varchar
      comment: |
        Creates a role with full read access to the provided database with name of the form <DATABASE_NAME>_READER

    - name: create_database_writer
      replace_if_exists: true
      database: {{ env.get('SNOWFLAKE_DATABASE') }}
      schema: {{ env.get('SNOWFLAKE_SCHEMA') }}
      language: javascript
      execute_as: owner
      args:
        database_name: varchar
      returns: varchar
      comment: |
        Creates a role with full write access to the provided database with name of the form <DATABASE_NAME>_WRITER